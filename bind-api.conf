# Nameserver(s) to connect to via nsupdate when issuing nsupdate commands
# Must be a list. Updates will be attempted in list order, so place primary
# nameservers at the beginning of the list
# Default: 127.0.0.1
nameserver = ["10.6.202.2", "10.6.202.3"]
# IP address to listen on
# Default: 0.0.0.0 (i.e all interfaces)
address = "0.0.0.0"
# Port to listen on
# Default: 9999
port = 9999
# Absolute path to log file for log messages
# Default: directory of script + "bind-api.log"
logfile = "/var/log/bind-api.log" 
# Default TTL for created DNS records (can be adjusted by incoming requests)
# Default: 8640
ttl = 8640
# Absolute path to private DNSSEC key
# Default: directory of script + "dnssec_key.private"
sig_key = "/etc/Kmathworks.com.+165+08143.key"	
# API Key expected in X-API-Key header of all incoming requests
# for authentication
# Default: secret
secret = "secret123"
# nsupdate command string. Update to absolute path to nsupdate binary if in unusual location or not on $PATH
# Default: nsupdate
nsupdate_command = "nsupdate"
# Absolute path to the SSL certificate used to secure HTTPS server connection. The cert must be in PEM
# format and contain the entire certificate chain required to verify the authenticity of the cert.
# So, need: root cert -> any intermediate certs -> cert
cert_path = "/etc/ssl/certs/bind-api.pem"
# Absolute path to the private key for the SSL certificate used to secure HTTPS server connections
cert_key_path = "/etc/ssl/private/bind-api-key.pem"
# Search domain in which to create "search helper" CNAME records. This can be
# used to create CNAME records that point to the A record being created in a
# domain different from the A record domain. For example:
# A = test.domain.com
# CNAME = test.search.domain.com
search_domain = "search.domain.com"
